/* #### Task 1 üíª

- –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–ª–∞—Å—Å –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º–µ–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ (—Å–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, —É–º–Ω–æ–∂–µ–Ω–∏–µ, –¥–µ–ª–µ–Ω–∏–µ, –∏ –µ—â–µ –ª—é–±–æ–π/–ª—é–±—ã–µ –Ω–∞ –≤—ã–±–æ—Ä) –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2/3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: 2 —Ü–∏—Ñ—Ä—ã (–∏ –æ–ø–µ—Ä–∞—Ü–∏—è)
- –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ 10 –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞:
	- Mocha
	- Mocha + chai
	- Jest

*–ì—Ä—É–ø–ø–∏—Ä—É–µ–º —Ç–µ—Å—Ç—ã —Å –ø–æ–º–æ—â—å—é Describe. –¢–∞–∫ –∂–µ –ø—Ä–∏–º–µ–Ω—è–µ–º —Ö—É–∫–∏, –≥–¥–µ –æ–Ω–∏ —É–º–µ—Å—Ç–Ω—ã */

import assert from "assert";
import { Calculator } from "./calculator";

const sumCalculator = new Calculator(4, 4);

describe("Test Addition positive", function () {
  it("Test#1", function () {
    assert.equal(sumCalculator.getAddition(), 8, "Test#1 failed");
  });
});

describe("Test Addition negative", function () {
  it("Test#2", function () {
    assert.equal(sumCalculator.getAddition(), 10, "Test#2 failed");
  });
});

describe("Test Subtraction positive", function () {
  it("Test#3", function () {
    assert.equal(sumCalculator.getSubtraction(), 0, "Test#3 failed");
  });
});

describe("Test Subtraction negative", function () {
  it("Test#4", function () {
    assert.equal(sumCalculator.getSubtraction(), 8, "Test#4 failed");
  });
});

describe("Test Multiply positive", function () {
  it("Test#5", function () {
    assert.equal(sumCalculator.getMultiply(), 16, "Test#5 failed");
  });
});

describe("Test Multiply negative", function () {
  it("Test#6", function () {
    assert.equal(sumCalculator.getMultiply(), 15, "Test#6 failed");
  });
});

describe("Test Divide positive", function () {
  it("Test#7", function () {
    assert.equal(sumCalculator.getDivide(), 1, "Test#7 failed");
  });
});

describe("Test Divide negative", function () {
  it("Test#8", function () {
    assert.equal(sumCalculator.getDivide(), 8, "Test#8 failed");
  });
});

describe("Test Degree positive", function () {
  it("Test#9", function () {
    assert.equal(sumCalculator.getDegree(), 256, "Test#9 failed");
  });
});

describe("Test Degree negative", function () {
  it("Test#10 ", function () {
    assert.equal(sumCalculator.getDegree(), 8, "Test#10 failed");
  });
});
